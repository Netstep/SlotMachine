@{
    ViewData["Title"] = "Home Page";
}

@section Scripts
{
    <script>

        var vm = new Vue({
            el: '#app',
            data: {
                spinning: false,
                offsetA: randomInteger(0, 16),
                offsetB: randomInteger(0, 16),
                offsetC: randomInteger(0, 16),
                credits: 100,
                betInput: 1,
                bet: 1,
                bonus: 0
            },
            methods: {
                spin: function() {
                    this.doSpin(this.betInput);
                },
                max: function() {
                    this.doSpin(this.credits >= 3 ? 3 : this.credits);
                },
                doSpin: function (bet) {
                    this.bet = bet;
                    if (this.credits < this.bet) {
                        alert("Not enough credits. Please reload page to play again.");
                        return;
                    }
                    this.spinning = true;
                    this.credits -= this.bet;
                    this.bonus = 0;
                    TweenMax.to(this.$data, 1, { offsetA: this.offsetA + randomInteger(10, 15) });
                    TweenMax.to(this.$data, 1.5, { offsetB: this.offsetB + randomInteger(15, 20) });
                    TweenMax.to(this.$data, 2, { offsetC: this.offsetC + randomInteger(20, 30) });
                    setTimeout(vm.spinEnd, 2100);
                },
                spinEnd: function() {
                    this.spinning = false;

                    let a = this.offsetA % 17;
                    let b = this.offsetB % 17;
                    let c = this.offsetC % 17;
                    let bonus = 0;

                    // cherry
                    if (a == 1) bonus += this.bet * 2;
                    if (b == 1) bonus += this.bet * 2;
                    if (c == 1) bonus += this.bet * 2;

                    // bars
                    const bars = new Set([0, 12, 6, 10, 3, 15]);
                    const bars1 = new Set([0, 12, 6]);
                    const bars2 = new Set([10, 3]);
                    if (bars.has(a) && bars.has(b) && bars.has(c)) {
                        if (a == 15 && b == 15 && c == 15) // equal 3bars
                            bonus += this.bet * 100;
                        else if (bars2.has(a) && bars2.has(b) && bars2.has(c)) // equal 2bars
                            bonus += this.bet * 50;
                        else if (bars1.has(a) && bars1.has(b) && bars1.has(c)) // equal 1bars
                            bonus += this.bet * 25;
                        else // any bars
                            bonus += this.bet * 5;
                    }

                    // 777
                    if (a == 8 && b == 8 && c == 8)
                        bonus += this.bet == 1 ? 300 : (this.bet == 2 ? 600 : 1500);

                    this.bonus = bonus;
                    if (bonus > 0)
                        this.addCredits(bonus);
                },
                addCredits: function(creditsToAdd) {
                    var counter = { var: vm.credits };
                    TweenMax.to(counter,
                        1,
                        {
                            var: vm.credits + creditsToAdd,
                            onUpdate: function() {
                                vm.credits = Math.ceil(counter.var);
                            },
                            ease: Circ.easeOut
                        });
                }
            }
        })

    </script>
}

<div id="app" class="row">
    <div class="d-none d-lg-block col-lg-4">

    </div>
    <div class="col-12 col-lg-4">
        <div class="d-flex justify-content-center box">
            <div class="bar d-flex align-items-start flex-column" v-bind:style="{ backgroundPositionY: offsetA*100 - 50 + 'px' }">
                <div class="mb-auto frame"></div>
                <div class="frame"></div>
            </div>
            <div class="bar d-flex align-items-start flex-column" v-bind:style="{ backgroundPositionY: offsetB*100 - 50 + 'px' }">
                <div class="mb-auto frame"></div>
                <div class="frame"></div>
            </div>
            <div class="bar d-flex align-items-start flex-column" v-bind:style="{ backgroundPositionY: offsetC*100 - 50 + 'px' }">
                <div class="mb-auto frame"></div>
                <div class="frame"></div>
            </div>
        </div>
    </div>
    <div class="col-12 col-lg-4 p-3">
        <div>
            Credits: {{credits}}
            <br /><br />
            Won: {{bonus}}
            <br /><br />
            Bet: <input type="number" step="1" min="1" max="3" v-model="betInput" :disabled="spinning" />
            <br /><br />
            <button type="button" class="btn btn-success px-4" v-on:click="spin()" :disabled="spinning">Spin</button>
            <button type="button" class="btn btn-warning px-4 mx-4" v-on:click="max()" :disabled="spinning">Max</button>
        </div>
    </div>
    
</div>
